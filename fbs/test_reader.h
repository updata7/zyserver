#ifndef TEST_READER_H
#define TEST_READER_H

/* Generated by flatcc 0.4.1-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#ifndef alignas
#include <stdalign.h>
#endif
#define PDIAGNOSTIC_IGNORE_UNUSED
#include "flatcc/portable/pdiagnostic_push.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct request_table *request_table_t;
typedef const flatbuffers_uoffset_t *request_vec_t;
typedef flatbuffers_uoffset_t *request_mutable_vec_t;
typedef const struct response_table *response_table_t;
typedef const flatbuffers_uoffset_t *response_vec_t;
typedef flatbuffers_uoffset_t *response_mutable_vec_t;



struct request_table { uint8_t unused__; };

#ifndef request_identifier
#define request_identifier flatbuffers_identifier
#endif
#define request_type_hash ((flatbuffers_thash_t)0x3eaa09b2)
#define request_type_identifier "\xb2\x09\xaa\x3e"
static inline size_t request_vec_len(request_vec_t vec)
__flatbuffers_vec_len(vec)
static inline request_table_t request_vec_at(request_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(request_table_t, vec, i, 0)
__flatbuffers_table_as_root(request)

static inline int32_t request_task_id(request_table_t t)
__flatbuffers_scalar_field(flatbuffers_int32, 0, 0, t)
static inline int request_task_id_is_present(request_table_t t)
__flatbuffers_field_present(0, t)

static inline int32_t request_oper_type(request_table_t t)
__flatbuffers_scalar_field(flatbuffers_int32, 1, 0, t)
static inline int request_oper_type_is_present(request_table_t t)
__flatbuffers_field_present(1, t)


struct response_table { uint8_t unused__; };

#ifndef response_identifier
#define response_identifier flatbuffers_identifier
#endif
#define response_type_hash ((flatbuffers_thash_t)0x595dc1de)
#define response_type_identifier "\xde\xc1\x5d\x59"
static inline size_t response_vec_len(response_vec_t vec)
__flatbuffers_vec_len(vec)
static inline response_table_t response_vec_at(response_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(response_table_t, vec, i, 0)
__flatbuffers_table_as_root(response)

static inline int32_t response_retcode(response_table_t t)
__flatbuffers_scalar_field(flatbuffers_int32, 0, 0, t)
static inline int response_retcode_is_present(response_table_t t)
__flatbuffers_field_present(0, t)


#include "flatcc/portable/pdiagnostic_pop.h"
#endif /* TEST_READER_H */
