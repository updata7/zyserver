#ifndef TASK_BUILDER_H
#define TASK_BUILDER_H

/* Generated by flatcc 0.4.1-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef TASK_READER_H
#include "task_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#define PDIAGNOSTIC_IGNORE_UNUSED
#include "flatcc/portable/pdiagnostic_push.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

static const flatbuffers_voffset_t __request_required[] = {0 };
__flatbuffers_build_table(flatbuffers_, request, 2)
static const flatbuffers_voffset_t __response_required[] = {0 };
__flatbuffers_build_table(flatbuffers_, response, 1)
static const flatbuffers_voffset_t __Protocol_required[] = {0 };
__flatbuffers_build_table(flatbuffers_, Protocol, 2)
#define __request_formal_args , int32_t v0, int32_t v1
#define __request_call_args , v0, v1
static inline request_ref_t request_create(flatbuffers_builder_t *B __request_formal_args);
#define __response_formal_args , int32_t v0
#define __response_call_args , v0
static inline response_ref_t response_create(flatbuffers_builder_t *B __response_formal_args);
#define __Protocol_formal_args , request_ref_t v0, response_ref_t v1
#define __Protocol_call_args , v0, v1
static inline Protocol_ref_t Protocol_create(flatbuffers_builder_t *B __Protocol_formal_args);

__flatbuffers_build_scalar_field(0, flatbuffers_, request_task_id, flatbuffers_int32, int32_t, 4, 4, 0)
__flatbuffers_build_scalar_field(1, flatbuffers_, request_oper_type, flatbuffers_int32, int32_t, 4, 4, 0)

static inline request_ref_t request_create(flatbuffers_builder_t *B __request_formal_args)
{
    if (request_start(B)
        || request_task_id_add(B, v0)
        || request_oper_type_add(B, v1)) {
        return 0;
    }
    return request_end(B);
}
__flatbuffers_build_table_prolog(flatbuffers_, request, request_identifier, request_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, response_retcode, flatbuffers_int32, int32_t, 4, 4, 0)

static inline response_ref_t response_create(flatbuffers_builder_t *B __response_formal_args)
{
    if (response_start(B)
        || response_retcode_add(B, v0)) {
        return 0;
    }
    return response_end(B);
}
__flatbuffers_build_table_prolog(flatbuffers_, response, response_identifier, response_type_identifier)

__flatbuffers_build_table_field(0, flatbuffers_, Protocol_request, request)
__flatbuffers_build_table_field(1, flatbuffers_, Protocol_response, response)

static inline Protocol_ref_t Protocol_create(flatbuffers_builder_t *B __Protocol_formal_args)
{
    if (Protocol_start(B)
        || Protocol_request_add(B, v0)
        || Protocol_response_add(B, v1)) {
        return 0;
    }
    return Protocol_end(B);
}
__flatbuffers_build_table_prolog(flatbuffers_, Protocol, Protocol_identifier, Protocol_type_identifier)

#include "flatcc/portable/pdiagnostic_pop.h"
#endif /* TASK_BUILDER_H */
