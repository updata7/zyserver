#ifndef LOGIN_READER_H
#define LOGIN_READER_H

/* Generated by flatcc 0.4.1-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#ifndef alignas
#include <stdalign.h>
#endif
#define PDIAGNOSTIC_IGNORE_UNUSED
#include "flatcc/portable/pdiagnostic_push.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct request_table *request_table_t;
typedef const flatbuffers_uoffset_t *request_vec_t;
typedef flatbuffers_uoffset_t *request_mutable_vec_t;
typedef const struct response_table *response_table_t;
typedef const flatbuffers_uoffset_t *response_vec_t;
typedef flatbuffers_uoffset_t *response_mutable_vec_t;
typedef const struct Protocol_table *Protocol_table_t;
typedef const flatbuffers_uoffset_t *Protocol_vec_t;
typedef flatbuffers_uoffset_t *Protocol_mutable_vec_t;



struct request_table { uint8_t unused__; };

#ifndef request_identifier
#define request_identifier flatbuffers_identifier
#endif
#define request_type_hash ((flatbuffers_thash_t)0x3eaa09b2)
#define request_type_identifier "\xb2\x09\xaa\x3e"
static inline size_t request_vec_len(request_vec_t vec)
__flatbuffers_vec_len(vec)
static inline request_table_t request_vec_at(request_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(request_table_t, vec, i, 0)
__flatbuffers_table_as_root(request)

static inline flatbuffers_string_t request_nick_name(request_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 0, t, 0)
static inline int request_nick_name_is_present(request_table_t t)
__flatbuffers_field_present(0, t)

static inline flatbuffers_string_t request_password(request_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 1, t, 0)
static inline int request_password_is_present(request_table_t t)
__flatbuffers_field_present(1, t)


struct response_table { uint8_t unused__; };

#ifndef response_identifier
#define response_identifier flatbuffers_identifier
#endif
#define response_type_hash ((flatbuffers_thash_t)0x595dc1de)
#define response_type_identifier "\xde\xc1\x5d\x59"
static inline size_t response_vec_len(response_vec_t vec)
__flatbuffers_vec_len(vec)
static inline response_table_t response_vec_at(response_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(response_table_t, vec, i, 0)
__flatbuffers_table_as_root(response)

static inline int32_t response_retcode(response_table_t t)
__flatbuffers_scalar_field(flatbuffers_int32, 0, 0, t)
static inline int response_retcode_is_present(response_table_t t)
__flatbuffers_field_present(0, t)

static inline flatbuffers_string_t response_player_id(response_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 1, t, 0)
static inline int response_player_id_is_present(response_table_t t)
__flatbuffers_field_present(1, t)

static inline flatbuffers_string_t response_session(response_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 2, t, 0)
static inline int response_session_is_present(response_table_t t)
__flatbuffers_field_present(2, t)


struct Protocol_table { uint8_t unused__; };

#ifndef Protocol_identifier
#define Protocol_identifier flatbuffers_identifier
#endif
#define Protocol_type_hash ((flatbuffers_thash_t)0x4a57ebd5)
#define Protocol_type_identifier "\xd5\xeb\x57\x4a"
static inline size_t Protocol_vec_len(Protocol_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Protocol_table_t Protocol_vec_at(Protocol_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Protocol_table_t, vec, i, 0)
__flatbuffers_table_as_root(Protocol)

static inline request_table_t Protocol_request(Protocol_table_t t)
__flatbuffers_table_field(request_table_t, 0, t, 0)
static inline int Protocol_request_is_present(Protocol_table_t t)
__flatbuffers_field_present(0, t)

static inline response_table_t Protocol_response(Protocol_table_t t)
__flatbuffers_table_field(response_table_t, 1, t, 0)
static inline int Protocol_response_is_present(Protocol_table_t t)
__flatbuffers_field_present(1, t)


#include "flatcc/portable/pdiagnostic_pop.h"
#endif /* LOGIN_READER_H */
